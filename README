Leex is a lexical analyzer generator for Erlang. It allows you to
tokenize a textual input stream so that it can be grammatically
analyzed and processed by parsers such as yecc. It has now been
included in the standard OTP distribution, at least experimentally, in
parsetools. I will update this site to be compatible with the
distribution, but after that all leex development I do will be done
here.

If you are looking at a good article on how to use leex and yecc try: 
http://blog.rusty.io/2011/02/08/leex-and-yecc/ . It is a re-post of this:
http://hopper.squarespace.com/blog/2008/5/29/leex-and-yecc.html, because it
is no longer available.

v0.5
----
Use the distribution code as base.

Define LEEXLIB can be used to set where to find include file.

No longer uses module regexp but has own regular expression parser.

v0.4
----
This is the last version of leex which is NOT part of the distribution!

A minor documentation fix and a critical bug-fix for token/3.

v0.3
----
Added options to pushback characters into the input stream.

Can now handle full unicode character sets in both input file and
generated scanner. Of course i/o system can't generate such an input
file yet.

Enforce headings for all sections of .xrl file.

Added verbose flag to control printing of parsing information.

Fixed bug with completely empty erlang code section.

v0.2
----
Added includefile option. Search for include file in current directory
or leex/include lib dir.

Restored text file version of documentation until I edoc and I are in
agreement.

Upgraded erlang_scan.xrl to full erlang tokeniser.

Now use line number of token start.


Thanks to Sébastien Arnaud who did the first packaging of leex for git.
Email: arnaudsj@gmail.com
Github: http://github.com/arnaudsj/
